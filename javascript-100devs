Free Software Engineering Bootcamp (Class 09) - Come Learn Basic Javascript! #100Devs
https://www.youtube.com/watch?v=22iEEZ8FSNM&list=PLBf-QcbaigsKwq3k2YEBQS17xUwfOA3O3&index=9

javascript characters :
  [] square brackets
  {} curly braces
  <> less than or greater than
  , commas
  . 
  : colon
  ; semicolon
  / forward slash, division
  ? question mark, ternary selector
  " double quotation mark
  '
  \ backslash
  |
  || or
  - hyphen, subtraction
  () parentheses
  * asterisk, multiplication
  &
  && and
  % remainder
  $ bling
  #
  ! bang
  + addition
  = comparison and assignment
  ~
  ` back ticks

********************************************************

code snippets are created using three back quotes (ticks) before and after 

********************************************************

Learn JavaScript Loops! Free Software Engineering Bootcamp! (class 16) 

- console.log:
  is a function, 
  prints to console, 
  used with parentheses

- return;
  is a keyword, 
  doesn't print to console, 
  used without parentheses,
  returns a value to a specific place

EXERCISES:

  function timesThree = (a, b, c) {
    console.log(a * b * c);
  }
  timesThree(1, 2, 3);
  
  other ways to print result to console:
  
  let product = timesThree(1, 2, 3);
  alert(product);

let name = dog;
console.log(name);

let num = 5;
let result = num + 10
alert(result);

let num = 5;
num += 10;
alert(num);

function subFour(a, b, c, d) {
alert(a - b - c - d);
}
subFour(50, 20, 10, 5);

function mod(x, y) {
  console.log(x % y);
}
mod(10, 5);

function mod(x,y) {
  return (x % y);
}
console.log(mod(10, 5))

function aboveFifty (x, y) {
  if (x + y > 50) {
  alert('Jumanji');
  }
}
aboveFifty(50, 5);

function timesThree(x, y, z) {
  if ((x * y * z) % 3 = 0) {
  alert('Zebra');
  }
}
timesThree (1, 2, 3);

function timesThree(x, y, z) {
  let product = (x * y * z);
  if (product % 3 === 0) {
    alert('Zebra');
  }
}
timesThree(1, 3, 10);

function wordAndNum (word, num) {
  for (i = 1; i <= num; i++) {
    console.log(word);
  }
}
wordAndNum ('cat,' 7);















  
